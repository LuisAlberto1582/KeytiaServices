//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SeeYouOnServiceBL.TMSManagement {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ManagementServiceSoap", Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class ManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTMSInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreRegisterSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSystemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurgeSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetISDNZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIPZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSystemFromFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemsInFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemDiagnosticsMessagesForSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSystemsDiagnosticsMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemDiagnosticsMessagesForSystemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemDiagnosticsMessagesForFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTMSDiagnosticsMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyTemplateToSystemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePersistentTemplateFromSystemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersistentSystemSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePersistentSystemSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBackupStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerformSystemBackupAsBackgroundActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerformSystemRestoreAsBackgroundActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerformSystemBackupOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerformSystemRestoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrimarySystemByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestartSystemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ManagementService() {
            this.Url = global::SeeYouOnServiceBL.Properties.Settings.Default.SeeYouOnServiceBL_TMSManagement_ManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTMSInformationCompletedEventHandler GetTMSInformationCompleted;
        
        /// <remarks/>
        public event PreRegisterSystemCompletedEventHandler PreRegisterSystemCompleted;
        
        /// <remarks/>
        public event AddSystemCompletedEventHandler AddSystemCompleted;
        
        /// <remarks/>
        public event GetSystemIdCompletedEventHandler GetSystemIdCompleted;
        
        /// <remarks/>
        public event GetSystemCompletedEventHandler GetSystemCompleted;
        
        /// <remarks/>
        public event GetAllSystemsCompletedEventHandler GetAllSystemsCompleted;
        
        /// <remarks/>
        public event UpdateSystemCompletedEventHandler UpdateSystemCompleted;
        
        /// <remarks/>
        public event PurgeSystemCompletedEventHandler PurgeSystemCompleted;
        
        /// <remarks/>
        public event RefreshSystemCompletedEventHandler RefreshSystemCompleted;
        
        /// <remarks/>
        public event GetTimeZonesCompletedEventHandler GetTimeZonesCompleted;
        
        /// <remarks/>
        public event GetISDNZonesCompletedEventHandler GetISDNZonesCompleted;
        
        /// <remarks/>
        public event GetIPZonesCompletedEventHandler GetIPZonesCompleted;
        
        /// <remarks/>
        public event GetFolderTreeCompletedEventHandler GetFolderTreeCompleted;
        
        /// <remarks/>
        public event DeleteSystemFromFolderCompletedEventHandler DeleteSystemFromFolderCompleted;
        
        /// <remarks/>
        public event GetFolderCompletedEventHandler GetFolderCompleted;
        
        /// <remarks/>
        public event GetSystemsInFolderCompletedEventHandler GetSystemsInFolderCompleted;
        
        /// <remarks/>
        public event GetSystemDiagnosticsMessagesForSystemCompletedEventHandler GetSystemDiagnosticsMessagesForSystemCompleted;
        
        /// <remarks/>
        public event GetAllSystemsDiagnosticsMessagesCompletedEventHandler GetAllSystemsDiagnosticsMessagesCompleted;
        
        /// <remarks/>
        public event GetSystemDiagnosticsMessagesForSystemsCompletedEventHandler GetSystemDiagnosticsMessagesForSystemsCompleted;
        
        /// <remarks/>
        public event GetSystemDiagnosticsMessagesForFolderCompletedEventHandler GetSystemDiagnosticsMessagesForFolderCompleted;
        
        /// <remarks/>
        public event GetTMSDiagnosticsMessagesCompletedEventHandler GetTMSDiagnosticsMessagesCompleted;
        
        /// <remarks/>
        public event GetTemplatesCompletedEventHandler GetTemplatesCompleted;
        
        /// <remarks/>
        public event ApplyTemplateToSystemsCompletedEventHandler ApplyTemplateToSystemsCompleted;
        
        /// <remarks/>
        public event RemovePersistentTemplateFromSystemsCompletedEventHandler RemovePersistentTemplateFromSystemsCompleted;
        
        /// <remarks/>
        public event GetPersistentSystemSettingsCompletedEventHandler GetPersistentSystemSettingsCompleted;
        
        /// <remarks/>
        public event UpdatePersistentSystemSettingsCompletedEventHandler UpdatePersistentSystemSettingsCompleted;
        
        /// <remarks/>
        public event GetBackupStatusCompletedEventHandler GetBackupStatusCompleted;
        
        /// <remarks/>
        public event PerformSystemBackupAsBackgroundActivityCompletedEventHandler PerformSystemBackupAsBackgroundActivityCompleted;
        
        /// <remarks/>
        public event PerformSystemRestoreAsBackgroundActivityCompletedEventHandler PerformSystemRestoreAsBackgroundActivityCompleted;
        
        /// <remarks/>
        public event PerformSystemBackupCompletedEventHandler PerformSystemBackupCompleted;
        
        /// <remarks/>
        public event PerformSystemRestoreCompletedEventHandler PerformSystemRestoreCompleted;
        
        /// <remarks/>
        public event GetPrimarySystemByUsernameCompletedEventHandler GetPrimarySystemByUsernameCompleted;
        
        /// <remarks/>
        public event RestartSystemCompletedEventHandler RestartSystemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetTMSInformation", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TMSInfo GetTMSInformation() {
            object[] results = this.Invoke("GetTMSInformation", new object[0]);
            return ((TMSInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetTMSInformationAsync() {
            this.GetTMSInformationAsync(null);
        }
        
        /// <remarks/>
        public void GetTMSInformationAsync(object userState) {
            if ((this.GetTMSInformationOperationCompleted == null)) {
                this.GetTMSInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTMSInformationOperationCompleted);
            }
            this.InvokeAsync("GetTMSInformation", new object[0], this.GetTMSInformationOperationCompleted, userState);
        }
        
        private void OnGetTMSInformationOperationCompleted(object arg) {
            if ((this.GetTMSInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTMSInformationCompleted(this, new GetTMSInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/PreRegisterSystem", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long PreRegisterSystem(PreRegisteredSystem PreRegSystem, long FolderId) {
            object[] results = this.Invoke("PreRegisterSystem", new object[] {
                        PreRegSystem,
                        FolderId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void PreRegisterSystemAsync(PreRegisteredSystem PreRegSystem, long FolderId) {
            this.PreRegisterSystemAsync(PreRegSystem, FolderId, null);
        }
        
        /// <remarks/>
        public void PreRegisterSystemAsync(PreRegisteredSystem PreRegSystem, long FolderId, object userState) {
            if ((this.PreRegisterSystemOperationCompleted == null)) {
                this.PreRegisterSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreRegisterSystemOperationCompleted);
            }
            this.InvokeAsync("PreRegisterSystem", new object[] {
                        PreRegSystem,
                        FolderId}, this.PreRegisterSystemOperationCompleted, userState);
        }
        
        private void OnPreRegisterSystemOperationCompleted(object arg) {
            if ((this.PreRegisterSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreRegisterSystemCompleted(this, new PreRegisterSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/AddSystem", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddSystem([System.Xml.Serialization.XmlElementAttribute("AddSystem")] AddSystem AddSystem1, long FolderId) {
            object[] results = this.Invoke("AddSystem", new object[] {
                        AddSystem1,
                        FolderId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddSystemAsync(AddSystem AddSystem1, long FolderId) {
            this.AddSystemAsync(AddSystem1, FolderId, null);
        }
        
        /// <remarks/>
        public void AddSystemAsync(AddSystem AddSystem1, long FolderId, object userState) {
            if ((this.AddSystemOperationCompleted == null)) {
                this.AddSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSystemOperationCompleted);
            }
            this.InvokeAsync("AddSystem", new object[] {
                        AddSystem1,
                        FolderId}, this.AddSystemOperationCompleted, userState);
        }
        
        private void OnAddSystemOperationCompleted(object arg) {
            if ((this.AddSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSystemCompleted(this, new AddSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetSystemId", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetSystemId(string NetworkIdentity) {
            object[] results = this.Invoke("GetSystemId", new object[] {
                        NetworkIdentity});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemIdAsync(string NetworkIdentity) {
            this.GetSystemIdAsync(NetworkIdentity, null);
        }
        
        /// <remarks/>
        public void GetSystemIdAsync(string NetworkIdentity, object userState) {
            if ((this.GetSystemIdOperationCompleted == null)) {
                this.GetSystemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemIdOperationCompleted);
            }
            this.InvokeAsync("GetSystemId", new object[] {
                        NetworkIdentity}, this.GetSystemIdOperationCompleted, userState);
        }
        
        private void OnGetSystemIdOperationCompleted(object arg) {
            if ((this.GetSystemIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemIdCompleted(this, new GetSystemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetSystem", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ManagedSystem GetSystem(long SystemId) {
            object[] results = this.Invoke("GetSystem", new object[] {
                        SystemId});
            return ((ManagedSystem)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemAsync(long SystemId) {
            this.GetSystemAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void GetSystemAsync(long SystemId, object userState) {
            if ((this.GetSystemOperationCompleted == null)) {
                this.GetSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemOperationCompleted);
            }
            this.InvokeAsync("GetSystem", new object[] {
                        SystemId}, this.GetSystemOperationCompleted, userState);
        }
        
        private void OnGetSystemOperationCompleted(object arg) {
            if ((this.GetSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemCompleted(this, new GetSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetAllSystems", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ManagedSystem[] GetAllSystems() {
            object[] results = this.Invoke("GetAllSystems", new object[0]);
            return ((ManagedSystem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSystemsAsync() {
            this.GetAllSystemsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSystemsAsync(object userState) {
            if ((this.GetAllSystemsOperationCompleted == null)) {
                this.GetAllSystemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSystemsOperationCompleted);
            }
            this.InvokeAsync("GetAllSystems", new object[0], this.GetAllSystemsOperationCompleted, userState);
        }
        
        private void OnGetAllSystemsOperationCompleted(object arg) {
            if ((this.GetAllSystemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSystemsCompleted(this, new GetAllSystemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/UpdateSystem", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSystem(ManagedSystem System) {
            this.Invoke("UpdateSystem", new object[] {
                        System});
        }
        
        /// <remarks/>
        public void UpdateSystemAsync(ManagedSystem System) {
            this.UpdateSystemAsync(System, null);
        }
        
        /// <remarks/>
        public void UpdateSystemAsync(ManagedSystem System, object userState) {
            if ((this.UpdateSystemOperationCompleted == null)) {
                this.UpdateSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSystemOperationCompleted);
            }
            this.InvokeAsync("UpdateSystem", new object[] {
                        System}, this.UpdateSystemOperationCompleted, userState);
        }
        
        private void OnUpdateSystemOperationCompleted(object arg) {
            if ((this.UpdateSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/PurgeSystem", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PurgeSystem(long SystemId) {
            this.Invoke("PurgeSystem", new object[] {
                        SystemId});
        }
        
        /// <remarks/>
        public void PurgeSystemAsync(long SystemId) {
            this.PurgeSystemAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void PurgeSystemAsync(long SystemId, object userState) {
            if ((this.PurgeSystemOperationCompleted == null)) {
                this.PurgeSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurgeSystemOperationCompleted);
            }
            this.InvokeAsync("PurgeSystem", new object[] {
                        SystemId}, this.PurgeSystemOperationCompleted, userState);
        }
        
        private void OnPurgeSystemOperationCompleted(object arg) {
            if ((this.PurgeSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurgeSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/RefreshSystem", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RefreshSystem(long SystemId) {
            this.Invoke("RefreshSystem", new object[] {
                        SystemId});
        }
        
        /// <remarks/>
        public void RefreshSystemAsync(long SystemId) {
            this.RefreshSystemAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void RefreshSystemAsync(long SystemId, object userState) {
            if ((this.RefreshSystemOperationCompleted == null)) {
                this.RefreshSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshSystemOperationCompleted);
            }
            this.InvokeAsync("RefreshSystem", new object[] {
                        SystemId}, this.RefreshSystemOperationCompleted, userState);
        }
        
        private void OnRefreshSystemOperationCompleted(object arg) {
            if ((this.RefreshSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetTimeZones", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimeZone[] GetTimeZones() {
            object[] results = this.Invoke("GetTimeZones", new object[0]);
            return ((TimeZone[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeZonesAsync() {
            this.GetTimeZonesAsync(null);
        }
        
        /// <remarks/>
        public void GetTimeZonesAsync(object userState) {
            if ((this.GetTimeZonesOperationCompleted == null)) {
                this.GetTimeZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeZonesOperationCompleted);
            }
            this.InvokeAsync("GetTimeZones", new object[0], this.GetTimeZonesOperationCompleted, userState);
        }
        
        private void OnGetTimeZonesOperationCompleted(object arg) {
            if ((this.GetTimeZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeZonesCompleted(this, new GetTimeZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetISDNZones", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ISDNZone[] GetISDNZones() {
            object[] results = this.Invoke("GetISDNZones", new object[0]);
            return ((ISDNZone[])(results[0]));
        }
        
        /// <remarks/>
        public void GetISDNZonesAsync() {
            this.GetISDNZonesAsync(null);
        }
        
        /// <remarks/>
        public void GetISDNZonesAsync(object userState) {
            if ((this.GetISDNZonesOperationCompleted == null)) {
                this.GetISDNZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetISDNZonesOperationCompleted);
            }
            this.InvokeAsync("GetISDNZones", new object[0], this.GetISDNZonesOperationCompleted, userState);
        }
        
        private void OnGetISDNZonesOperationCompleted(object arg) {
            if ((this.GetISDNZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetISDNZonesCompleted(this, new GetISDNZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetIPZones", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IPZone[] GetIPZones() {
            object[] results = this.Invoke("GetIPZones", new object[0]);
            return ((IPZone[])(results[0]));
        }
        
        /// <remarks/>
        public void GetIPZonesAsync() {
            this.GetIPZonesAsync(null);
        }
        
        /// <remarks/>
        public void GetIPZonesAsync(object userState) {
            if ((this.GetIPZonesOperationCompleted == null)) {
                this.GetIPZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIPZonesOperationCompleted);
            }
            this.InvokeAsync("GetIPZones", new object[0], this.GetIPZonesOperationCompleted, userState);
        }
        
        private void OnGetIPZonesOperationCompleted(object arg) {
            if ((this.GetIPZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIPZonesCompleted(this, new GetIPZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetFolderTree", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderTree GetFolderTree(bool IncludeSystems) {
            object[] results = this.Invoke("GetFolderTree", new object[] {
                        IncludeSystems});
            return ((FolderTree)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderTreeAsync(bool IncludeSystems) {
            this.GetFolderTreeAsync(IncludeSystems, null);
        }
        
        /// <remarks/>
        public void GetFolderTreeAsync(bool IncludeSystems, object userState) {
            if ((this.GetFolderTreeOperationCompleted == null)) {
                this.GetFolderTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderTreeOperationCompleted);
            }
            this.InvokeAsync("GetFolderTree", new object[] {
                        IncludeSystems}, this.GetFolderTreeOperationCompleted, userState);
        }
        
        private void OnGetFolderTreeOperationCompleted(object arg) {
            if ((this.GetFolderTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderTreeCompleted(this, new GetFolderTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/DeleteSystemFromFolder", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSystemFromFolder(long SystemId, long FolderId) {
            this.Invoke("DeleteSystemFromFolder", new object[] {
                        SystemId,
                        FolderId});
        }
        
        /// <remarks/>
        public void DeleteSystemFromFolderAsync(long SystemId, long FolderId) {
            this.DeleteSystemFromFolderAsync(SystemId, FolderId, null);
        }
        
        /// <remarks/>
        public void DeleteSystemFromFolderAsync(long SystemId, long FolderId, object userState) {
            if ((this.DeleteSystemFromFolderOperationCompleted == null)) {
                this.DeleteSystemFromFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSystemFromFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteSystemFromFolder", new object[] {
                        SystemId,
                        FolderId}, this.DeleteSystemFromFolderOperationCompleted, userState);
        }
        
        private void OnDeleteSystemFromFolderOperationCompleted(object arg) {
            if ((this.DeleteSystemFromFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSystemFromFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetFolder", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder GetFolder(long FolderId, bool IncludeSystems, bool Recursive) {
            object[] results = this.Invoke("GetFolder", new object[] {
                        FolderId,
                        IncludeSystems,
                        Recursive});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderAsync(long FolderId, bool IncludeSystems, bool Recursive) {
            this.GetFolderAsync(FolderId, IncludeSystems, Recursive, null);
        }
        
        /// <remarks/>
        public void GetFolderAsync(long FolderId, bool IncludeSystems, bool Recursive, object userState) {
            if ((this.GetFolderOperationCompleted == null)) {
                this.GetFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderOperationCompleted);
            }
            this.InvokeAsync("GetFolder", new object[] {
                        FolderId,
                        IncludeSystems,
                        Recursive}, this.GetFolderOperationCompleted, userState);
        }
        
        private void OnGetFolderOperationCompleted(object arg) {
            if ((this.GetFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderCompleted(this, new GetFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetSystemsInFolder", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ManagedSystem[] GetSystemsInFolder(long FolderId, bool Recursive) {
            object[] results = this.Invoke("GetSystemsInFolder", new object[] {
                        FolderId,
                        Recursive});
            return ((ManagedSystem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemsInFolderAsync(long FolderId, bool Recursive) {
            this.GetSystemsInFolderAsync(FolderId, Recursive, null);
        }
        
        /// <remarks/>
        public void GetSystemsInFolderAsync(long FolderId, bool Recursive, object userState) {
            if ((this.GetSystemsInFolderOperationCompleted == null)) {
                this.GetSystemsInFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemsInFolderOperationCompleted);
            }
            this.InvokeAsync("GetSystemsInFolder", new object[] {
                        FolderId,
                        Recursive}, this.GetSystemsInFolderOperationCompleted, userState);
        }
        
        private void OnGetSystemsInFolderOperationCompleted(object arg) {
            if ((this.GetSystemsInFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemsInFolderCompleted(this, new GetSystemsInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetSystemDiagnosticsMessagesFor" +
            "System", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemDiagnosticsMessage[] GetSystemDiagnosticsMessagesForSystem(long SystemId) {
            object[] results = this.Invoke("GetSystemDiagnosticsMessagesForSystem", new object[] {
                        SystemId});
            return ((SystemDiagnosticsMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemDiagnosticsMessagesForSystemAsync(long SystemId) {
            this.GetSystemDiagnosticsMessagesForSystemAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void GetSystemDiagnosticsMessagesForSystemAsync(long SystemId, object userState) {
            if ((this.GetSystemDiagnosticsMessagesForSystemOperationCompleted == null)) {
                this.GetSystemDiagnosticsMessagesForSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemDiagnosticsMessagesForSystemOperationCompleted);
            }
            this.InvokeAsync("GetSystemDiagnosticsMessagesForSystem", new object[] {
                        SystemId}, this.GetSystemDiagnosticsMessagesForSystemOperationCompleted, userState);
        }
        
        private void OnGetSystemDiagnosticsMessagesForSystemOperationCompleted(object arg) {
            if ((this.GetSystemDiagnosticsMessagesForSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemDiagnosticsMessagesForSystemCompleted(this, new GetSystemDiagnosticsMessagesForSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetAllSystemsDiagnosticsMessage" +
            "s", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemDiagnosticsMessage[] GetAllSystemsDiagnosticsMessages(SystemDiagnosticsMessageErrorLevel[] MessageLevels) {
            object[] results = this.Invoke("GetAllSystemsDiagnosticsMessages", new object[] {
                        MessageLevels});
            return ((SystemDiagnosticsMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSystemsDiagnosticsMessagesAsync(SystemDiagnosticsMessageErrorLevel[] MessageLevels) {
            this.GetAllSystemsDiagnosticsMessagesAsync(MessageLevels, null);
        }
        
        /// <remarks/>
        public void GetAllSystemsDiagnosticsMessagesAsync(SystemDiagnosticsMessageErrorLevel[] MessageLevels, object userState) {
            if ((this.GetAllSystemsDiagnosticsMessagesOperationCompleted == null)) {
                this.GetAllSystemsDiagnosticsMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSystemsDiagnosticsMessagesOperationCompleted);
            }
            this.InvokeAsync("GetAllSystemsDiagnosticsMessages", new object[] {
                        MessageLevels}, this.GetAllSystemsDiagnosticsMessagesOperationCompleted, userState);
        }
        
        private void OnGetAllSystemsDiagnosticsMessagesOperationCompleted(object arg) {
            if ((this.GetAllSystemsDiagnosticsMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSystemsDiagnosticsMessagesCompleted(this, new GetAllSystemsDiagnosticsMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetSystemDiagnosticsMessagesFor" +
            "Systems", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemDiagnosticsMessage[] GetSystemDiagnosticsMessagesForSystems(long[] SystemIds, SystemDiagnosticsMessageErrorLevel[] MessageLevels) {
            object[] results = this.Invoke("GetSystemDiagnosticsMessagesForSystems", new object[] {
                        SystemIds,
                        MessageLevels});
            return ((SystemDiagnosticsMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemDiagnosticsMessagesForSystemsAsync(long[] SystemIds, SystemDiagnosticsMessageErrorLevel[] MessageLevels) {
            this.GetSystemDiagnosticsMessagesForSystemsAsync(SystemIds, MessageLevels, null);
        }
        
        /// <remarks/>
        public void GetSystemDiagnosticsMessagesForSystemsAsync(long[] SystemIds, SystemDiagnosticsMessageErrorLevel[] MessageLevels, object userState) {
            if ((this.GetSystemDiagnosticsMessagesForSystemsOperationCompleted == null)) {
                this.GetSystemDiagnosticsMessagesForSystemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemDiagnosticsMessagesForSystemsOperationCompleted);
            }
            this.InvokeAsync("GetSystemDiagnosticsMessagesForSystems", new object[] {
                        SystemIds,
                        MessageLevels}, this.GetSystemDiagnosticsMessagesForSystemsOperationCompleted, userState);
        }
        
        private void OnGetSystemDiagnosticsMessagesForSystemsOperationCompleted(object arg) {
            if ((this.GetSystemDiagnosticsMessagesForSystemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemDiagnosticsMessagesForSystemsCompleted(this, new GetSystemDiagnosticsMessagesForSystemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetSystemDiagnosticsMessagesFor" +
            "Folder", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemDiagnosticsMessage[] GetSystemDiagnosticsMessagesForFolder(long FolderId, bool Recursive, SystemDiagnosticsMessageErrorLevel[] MessageLevels) {
            object[] results = this.Invoke("GetSystemDiagnosticsMessagesForFolder", new object[] {
                        FolderId,
                        Recursive,
                        MessageLevels});
            return ((SystemDiagnosticsMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemDiagnosticsMessagesForFolderAsync(long FolderId, bool Recursive, SystemDiagnosticsMessageErrorLevel[] MessageLevels) {
            this.GetSystemDiagnosticsMessagesForFolderAsync(FolderId, Recursive, MessageLevels, null);
        }
        
        /// <remarks/>
        public void GetSystemDiagnosticsMessagesForFolderAsync(long FolderId, bool Recursive, SystemDiagnosticsMessageErrorLevel[] MessageLevels, object userState) {
            if ((this.GetSystemDiagnosticsMessagesForFolderOperationCompleted == null)) {
                this.GetSystemDiagnosticsMessagesForFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemDiagnosticsMessagesForFolderOperationCompleted);
            }
            this.InvokeAsync("GetSystemDiagnosticsMessagesForFolder", new object[] {
                        FolderId,
                        Recursive,
                        MessageLevels}, this.GetSystemDiagnosticsMessagesForFolderOperationCompleted, userState);
        }
        
        private void OnGetSystemDiagnosticsMessagesForFolderOperationCompleted(object arg) {
            if ((this.GetSystemDiagnosticsMessagesForFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemDiagnosticsMessagesForFolderCompleted(this, new GetSystemDiagnosticsMessagesForFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetTMSDiagnosticsMessages", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TMSDiagnosticsMessage[] GetTMSDiagnosticsMessages() {
            object[] results = this.Invoke("GetTMSDiagnosticsMessages", new object[0]);
            return ((TMSDiagnosticsMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTMSDiagnosticsMessagesAsync() {
            this.GetTMSDiagnosticsMessagesAsync(null);
        }
        
        /// <remarks/>
        public void GetTMSDiagnosticsMessagesAsync(object userState) {
            if ((this.GetTMSDiagnosticsMessagesOperationCompleted == null)) {
                this.GetTMSDiagnosticsMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTMSDiagnosticsMessagesOperationCompleted);
            }
            this.InvokeAsync("GetTMSDiagnosticsMessages", new object[0], this.GetTMSDiagnosticsMessagesOperationCompleted, userState);
        }
        
        private void OnGetTMSDiagnosticsMessagesOperationCompleted(object arg) {
            if ((this.GetTMSDiagnosticsMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTMSDiagnosticsMessagesCompleted(this, new GetTMSDiagnosticsMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetTemplates", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Template[] GetTemplates() {
            object[] results = this.Invoke("GetTemplates", new object[0]);
            return ((Template[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplatesAsync() {
            this.GetTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void GetTemplatesAsync(object userState) {
            if ((this.GetTemplatesOperationCompleted == null)) {
                this.GetTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetTemplates", new object[0], this.GetTemplatesOperationCompleted, userState);
        }
        
        private void OnGetTemplatesOperationCompleted(object arg) {
            if ((this.GetTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplatesCompleted(this, new GetTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/ApplyTemplateToSystems", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApplyTemplateToSystems(int TemplateId, long[] SystemIds, bool Persistent) {
            this.Invoke("ApplyTemplateToSystems", new object[] {
                        TemplateId,
                        SystemIds,
                        Persistent});
        }
        
        /// <remarks/>
        public void ApplyTemplateToSystemsAsync(int TemplateId, long[] SystemIds, bool Persistent) {
            this.ApplyTemplateToSystemsAsync(TemplateId, SystemIds, Persistent, null);
        }
        
        /// <remarks/>
        public void ApplyTemplateToSystemsAsync(int TemplateId, long[] SystemIds, bool Persistent, object userState) {
            if ((this.ApplyTemplateToSystemsOperationCompleted == null)) {
                this.ApplyTemplateToSystemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyTemplateToSystemsOperationCompleted);
            }
            this.InvokeAsync("ApplyTemplateToSystems", new object[] {
                        TemplateId,
                        SystemIds,
                        Persistent}, this.ApplyTemplateToSystemsOperationCompleted, userState);
        }
        
        private void OnApplyTemplateToSystemsOperationCompleted(object arg) {
            if ((this.ApplyTemplateToSystemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyTemplateToSystemsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/RemovePersistentTemplateFromSys" +
            "tems", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePersistentTemplateFromSystems(long[] SystemIds) {
            this.Invoke("RemovePersistentTemplateFromSystems", new object[] {
                        SystemIds});
        }
        
        /// <remarks/>
        public void RemovePersistentTemplateFromSystemsAsync(long[] SystemIds) {
            this.RemovePersistentTemplateFromSystemsAsync(SystemIds, null);
        }
        
        /// <remarks/>
        public void RemovePersistentTemplateFromSystemsAsync(long[] SystemIds, object userState) {
            if ((this.RemovePersistentTemplateFromSystemsOperationCompleted == null)) {
                this.RemovePersistentTemplateFromSystemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePersistentTemplateFromSystemsOperationCompleted);
            }
            this.InvokeAsync("RemovePersistentTemplateFromSystems", new object[] {
                        SystemIds}, this.RemovePersistentTemplateFromSystemsOperationCompleted, userState);
        }
        
        private void OnRemovePersistentTemplateFromSystemsOperationCompleted(object arg) {
            if ((this.RemovePersistentTemplateFromSystemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePersistentTemplateFromSystemsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetPersistentSystemSettings", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PersistentSystemSettings GetPersistentSystemSettings(long SystemId) {
            object[] results = this.Invoke("GetPersistentSystemSettings", new object[] {
                        SystemId});
            return ((PersistentSystemSettings)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersistentSystemSettingsAsync(long SystemId) {
            this.GetPersistentSystemSettingsAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void GetPersistentSystemSettingsAsync(long SystemId, object userState) {
            if ((this.GetPersistentSystemSettingsOperationCompleted == null)) {
                this.GetPersistentSystemSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersistentSystemSettingsOperationCompleted);
            }
            this.InvokeAsync("GetPersistentSystemSettings", new object[] {
                        SystemId}, this.GetPersistentSystemSettingsOperationCompleted, userState);
        }
        
        private void OnGetPersistentSystemSettingsOperationCompleted(object arg) {
            if ((this.GetPersistentSystemSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersistentSystemSettingsCompleted(this, new GetPersistentSystemSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/UpdatePersistentSystemSettings", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePersistentSystemSettings(long SystemId, PersistentSystemSettings Settings) {
            this.Invoke("UpdatePersistentSystemSettings", new object[] {
                        SystemId,
                        Settings});
        }
        
        /// <remarks/>
        public void UpdatePersistentSystemSettingsAsync(long SystemId, PersistentSystemSettings Settings) {
            this.UpdatePersistentSystemSettingsAsync(SystemId, Settings, null);
        }
        
        /// <remarks/>
        public void UpdatePersistentSystemSettingsAsync(long SystemId, PersistentSystemSettings Settings, object userState) {
            if ((this.UpdatePersistentSystemSettingsOperationCompleted == null)) {
                this.UpdatePersistentSystemSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePersistentSystemSettingsOperationCompleted);
            }
            this.InvokeAsync("UpdatePersistentSystemSettings", new object[] {
                        SystemId,
                        Settings}, this.UpdatePersistentSystemSettingsOperationCompleted, userState);
        }
        
        private void OnUpdatePersistentSystemSettingsOperationCompleted(object arg) {
            if ((this.UpdatePersistentSystemSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePersistentSystemSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetBackupStatus", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> GetBackupStatus(long SystemId) {
            object[] results = this.Invoke("GetBackupStatus", new object[] {
                        SystemId});
            return ((System.Nullable<System.DateTime>)(results[0]));
        }
        
        /// <remarks/>
        public void GetBackupStatusAsync(long SystemId) {
            this.GetBackupStatusAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void GetBackupStatusAsync(long SystemId, object userState) {
            if ((this.GetBackupStatusOperationCompleted == null)) {
                this.GetBackupStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBackupStatusOperationCompleted);
            }
            this.InvokeAsync("GetBackupStatus", new object[] {
                        SystemId}, this.GetBackupStatusOperationCompleted, userState);
        }
        
        private void OnGetBackupStatusOperationCompleted(object arg) {
            if ((this.GetBackupStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBackupStatusCompleted(this, new GetBackupStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/PerformSystemBackupAsBackground" +
            "Activity", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PerformSystemBackupAsBackgroundActivity(long[] SystemIds, bool SendFailureEvent, bool SendSuccessEvent) {
            this.Invoke("PerformSystemBackupAsBackgroundActivity", new object[] {
                        SystemIds,
                        SendFailureEvent,
                        SendSuccessEvent});
        }
        
        /// <remarks/>
        public void PerformSystemBackupAsBackgroundActivityAsync(long[] SystemIds, bool SendFailureEvent, bool SendSuccessEvent) {
            this.PerformSystemBackupAsBackgroundActivityAsync(SystemIds, SendFailureEvent, SendSuccessEvent, null);
        }
        
        /// <remarks/>
        public void PerformSystemBackupAsBackgroundActivityAsync(long[] SystemIds, bool SendFailureEvent, bool SendSuccessEvent, object userState) {
            if ((this.PerformSystemBackupAsBackgroundActivityOperationCompleted == null)) {
                this.PerformSystemBackupAsBackgroundActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformSystemBackupAsBackgroundActivityOperationCompleted);
            }
            this.InvokeAsync("PerformSystemBackupAsBackgroundActivity", new object[] {
                        SystemIds,
                        SendFailureEvent,
                        SendSuccessEvent}, this.PerformSystemBackupAsBackgroundActivityOperationCompleted, userState);
        }
        
        private void OnPerformSystemBackupAsBackgroundActivityOperationCompleted(object arg) {
            if ((this.PerformSystemBackupAsBackgroundActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformSystemBackupAsBackgroundActivityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/PerformSystemRestoreAsBackgroun" +
            "dActivity", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PerformSystemRestoreAsBackgroundActivity(long[] SystemIds, bool SendFailureEvent, bool SendSuccessEvent) {
            this.Invoke("PerformSystemRestoreAsBackgroundActivity", new object[] {
                        SystemIds,
                        SendFailureEvent,
                        SendSuccessEvent});
        }
        
        /// <remarks/>
        public void PerformSystemRestoreAsBackgroundActivityAsync(long[] SystemIds, bool SendFailureEvent, bool SendSuccessEvent) {
            this.PerformSystemRestoreAsBackgroundActivityAsync(SystemIds, SendFailureEvent, SendSuccessEvent, null);
        }
        
        /// <remarks/>
        public void PerformSystemRestoreAsBackgroundActivityAsync(long[] SystemIds, bool SendFailureEvent, bool SendSuccessEvent, object userState) {
            if ((this.PerformSystemRestoreAsBackgroundActivityOperationCompleted == null)) {
                this.PerformSystemRestoreAsBackgroundActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformSystemRestoreAsBackgroundActivityOperationCompleted);
            }
            this.InvokeAsync("PerformSystemRestoreAsBackgroundActivity", new object[] {
                        SystemIds,
                        SendFailureEvent,
                        SendSuccessEvent}, this.PerformSystemRestoreAsBackgroundActivityOperationCompleted, userState);
        }
        
        private void OnPerformSystemRestoreAsBackgroundActivityOperationCompleted(object arg) {
            if ((this.PerformSystemRestoreAsBackgroundActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformSystemRestoreAsBackgroundActivityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/PerformSystemBackup", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PerformSystemBackup(long SystemId) {
            this.Invoke("PerformSystemBackup", new object[] {
                        SystemId});
        }
        
        /// <remarks/>
        public void PerformSystemBackupAsync(long SystemId) {
            this.PerformSystemBackupAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void PerformSystemBackupAsync(long SystemId, object userState) {
            if ((this.PerformSystemBackupOperationCompleted == null)) {
                this.PerformSystemBackupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformSystemBackupOperationCompleted);
            }
            this.InvokeAsync("PerformSystemBackup", new object[] {
                        SystemId}, this.PerformSystemBackupOperationCompleted, userState);
        }
        
        private void OnPerformSystemBackupOperationCompleted(object arg) {
            if ((this.PerformSystemBackupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformSystemBackupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/PerformSystemRestore", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PerformSystemRestore(long SystemId) {
            this.Invoke("PerformSystemRestore", new object[] {
                        SystemId});
        }
        
        /// <remarks/>
        public void PerformSystemRestoreAsync(long SystemId) {
            this.PerformSystemRestoreAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void PerformSystemRestoreAsync(long SystemId, object userState) {
            if ((this.PerformSystemRestoreOperationCompleted == null)) {
                this.PerformSystemRestoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformSystemRestoreOperationCompleted);
            }
            this.InvokeAsync("PerformSystemRestore", new object[] {
                        SystemId}, this.PerformSystemRestoreOperationCompleted, userState);
        }
        
        private void OnPerformSystemRestoreOperationCompleted(object arg) {
            if ((this.PerformSystemRestoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformSystemRestoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/GetPrimarySystemByUsername", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ManagedSystem GetPrimarySystemByUsername(string Username) {
            object[] results = this.Invoke("GetPrimarySystemByUsername", new object[] {
                        Username});
            return ((ManagedSystem)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrimarySystemByUsernameAsync(string Username) {
            this.GetPrimarySystemByUsernameAsync(Username, null);
        }
        
        /// <remarks/>
        public void GetPrimarySystemByUsernameAsync(string Username, object userState) {
            if ((this.GetPrimarySystemByUsernameOperationCompleted == null)) {
                this.GetPrimarySystemByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrimarySystemByUsernameOperationCompleted);
            }
            this.InvokeAsync("GetPrimarySystemByUsername", new object[] {
                        Username}, this.GetPrimarySystemByUsernameOperationCompleted, userState);
        }
        
        private void OnGetPrimarySystemByUsernameOperationCompleted(object arg) {
            if ((this.GetPrimarySystemByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrimarySystemByUsernameCompleted(this, new GetPrimarySystemByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tandberg.com/TMS/ManagementService/1.0/RestartSystem", RequestNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", ResponseNamespace="http://www.tandberg.com/TMS/ManagementService/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RestartSystem(long SystemId) {
            this.Invoke("RestartSystem", new object[] {
                        SystemId});
        }
        
        /// <remarks/>
        public void RestartSystemAsync(long SystemId) {
            this.RestartSystemAsync(SystemId, null);
        }
        
        /// <remarks/>
        public void RestartSystemAsync(long SystemId, object userState) {
            if ((this.RestartSystemOperationCompleted == null)) {
                this.RestartSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestartSystemOperationCompleted);
            }
            this.InvokeAsync("RestartSystem", new object[] {
                        SystemId}, this.RestartSystemOperationCompleted, userState);
        }
        
        private void OnRestartSystemOperationCompleted(object arg) {
            if ((this.RestartSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestartSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class TMSInfo {
        
        private string versionField;
        
        private string serialNumberField;
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class PersistentSystemSettings {
        
        private string nameField;
        
        private string h323IdField;
        
        private string e164AliasField;
        
        private System.Nullable<int> persistentTemplateIdField;
        
        private string sIPURIField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string H323Id {
            get {
                return this.h323IdField;
            }
            set {
                this.h323IdField = value;
            }
        }
        
        /// <remarks/>
        public string E164Alias {
            get {
                return this.e164AliasField;
            }
            set {
                this.e164AliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PersistentTemplateId {
            get {
                return this.persistentTemplateIdField;
            }
            set {
                this.persistentTemplateIdField = value;
            }
        }
        
        /// <remarks/>
        public string SIPURI {
            get {
                return this.sIPURIField;
            }
            set {
                this.sIPURIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class Template {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class TMSDiagnosticsMessage {
        
        private int idField;
        
        private string generalDescriptionField;
        
        private string specificDescriptionField;
        
        private string howToFixDescriptionField;
        
        private SystemDiagnosticsMessageStatus messageStatusField;
        
        private SystemDiagnosticsMessageErrorLevel errorLevelField;
        
        private SystemDiagnosticsMessageType messageTypeField;
        
        private System.DateTime firstReportedField;
        
        private System.DateTime lastReportedField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string GeneralDescription {
            get {
                return this.generalDescriptionField;
            }
            set {
                this.generalDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string SpecificDescription {
            get {
                return this.specificDescriptionField;
            }
            set {
                this.specificDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string HowToFixDescription {
            get {
                return this.howToFixDescriptionField;
            }
            set {
                this.howToFixDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessageStatus MessageStatus {
            get {
                return this.messageStatusField;
            }
            set {
                this.messageStatusField = value;
            }
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessageErrorLevel ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessageType MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FirstReported {
            get {
                return this.firstReportedField;
            }
            set {
                this.firstReportedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastReported {
            get {
                return this.lastReportedField;
            }
            set {
                this.lastReportedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum SystemDiagnosticsMessageStatus {
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Fixed,
        
        /// <remarks/>
        Acknowledged,
        
        /// <remarks/>
        Invalidated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum SystemDiagnosticsMessageErrorLevel {
        
        /// <remarks/>
        Indeterminate,
        
        /// <remarks/>
        Critical,
        
        /// <remarks/>
        Major,
        
        /// <remarks/>
        Minor,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Cleared,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum SystemDiagnosticsMessageType {
        
        /// <remarks/>
        GatekeeperConfigurationError,
        
        /// <remarks/>
        GatekeeperRegistrationFailure,
        
        /// <remarks/>
        LowBatteryOnRemoteControl,
        
        /// <remarks/>
        IncorrectSNMPTraphost,
        
        /// <remarks/>
        IncorrectManagementAddressURL,
        
        /// <remarks/>
        BlankSystemName,
        
        /// <remarks/>
        IncorrectSNMPCommunityName,
        
        /// <remarks/>
        ISDNZoneNotSet,
        
        /// <remarks/>
        IPZoneNotSet,
        
        /// <remarks/>
        TimeZoneNotSet,
        
        /// <remarks/>
        ISDNNumberError_AcceptsISDNCallsButNoBandwidth,
        
        /// <remarks/>
        IPNumberError_AcceptsIPCallsButNoBandwidth,
        
        /// <remarks/>
        E164AliasError_MissingAlias,
        
        /// <remarks/>
        ISDNNumberError_HasNumberButNoBandwidth,
        
        /// <remarks/>
        BandwidthError,
        
        /// <remarks/>
        SchedulingError,
        
        /// <remarks/>
        FTPConfigurationError,
        
        /// <remarks/>
        HTTPError,
        
        /// <remarks/>
        ISDNConfigurationError,
        
        /// <remarks/>
        NoTMSVSServices,
        
        /// <remarks/>
        NoTMSCPServices,
        
        /// <remarks/>
        NoTMSECPServices,
        
        /// <remarks/>
        LowMaxParticipantsOnService,
        
        /// <remarks/>
        PersistentNameNotSameAsNameOnSystem,
        
        /// <remarks/>
        AutoAnswerOff,
        
        /// <remarks/>
        GatekeeperModeOff,
        
        /// <remarks/>
        ActiveGatekeeperAddressBlank,
        
        /// <remarks/>
        SoftwareVersionIncompatible,
        
        /// <remarks/>
        NoPortsDefinedOnSystem,
        
        /// <remarks/>
        NoSystemContactAssigned,
        
        /// <remarks/>
        ISDNNumberError_HasBandwidthButNoNumber,
        
        /// <remarks/>
        SIPServerRegistrationFailure,
        
        /// <remarks/>
        TMSConnectionError,
        
        /// <remarks/>
        UserDefinedCriticalError,
        
        /// <remarks/>
        UserDefinedMajorError,
        
        /// <remarks/>
        UserDefinedMinorError,
        
        /// <remarks/>
        UserDefinedWarningError,
        
        /// <remarks/>
        LowDiskspaceOnTMSWebServer,
        
        /// <remarks/>
        LowDiskspaceOnTMSDatabaseServer,
        
        /// <remarks/>
        TMSServiceNotRunning,
        
        /// <remarks/>
        PendingConfiguratonChangesForSystem,
        
        /// <remarks/>
        E164AliasError_HasNumberButNoBandwidth,
        
        /// <remarks/>
        TimeZonesAreDifferent,
        
        /// <remarks/>
        LowDiskspaceOnSystem,
        
        /// <remarks/>
        PortCountExceedsLicense,
        
        /// <remarks/>
        NoTMSTranscodingLinesDefined,
        
        /// <remarks/>
        NoTMSArchivingLinesDefined,
        
        /// <remarks/>
        IncorrectUserNamePassword,
        
        /// <remarks/>
        E164AliasError_GatekeeperRegistrationProblem,
        
        /// <remarks/>
        SystemSettingsNotFound,
        
        /// <remarks/>
        GatekeeperIdRegistrationOff,
        
        /// <remarks/>
        NewSoftwareAvailable,
        
        /// <remarks/>
        ServiceContractExpired,
        
        /// <remarks/>
        ServiceContractExpiring,
        
        /// <remarks/>
        NoServiceContract,
        
        /// <remarks/>
        HTTPSConnectionError,
        
        /// <remarks/>
        SIPRegistrationProblem,
        
        /// <remarks/>
        CertificateValidationError,
        
        /// <remarks/>
        ClusterSoftwareVersionsDiffer,
        
        /// <remarks/>
        ClusterProvisioningNotEnabled,
        
        /// <remarks/>
        ClusterProvisioningVersionsDiffer,
        
        /// <remarks/>
        ClusterAlternatesDiffer,
        
        /// <remarks/>
        ClusterConfigDiffer,
        
        /// <remarks/>
        ClusterMissingOptionKeys,
        
        /// <remarks/>
        NewPCClientVersionAvailable,
        
        /// <remarks/>
        UnableToCommunicateWithProvisioningService,
        
        /// <remarks/>
        ClusterNTPServerNotSet,
        
        /// <remarks/>
        UnableToCommunicateWithRemoteTMSAgent,
        
        /// <remarks/>
        SystemMustBeRestarted,
        
        /// <remarks/>
        ClusterMasterAddressIsWrong,
        
        /// <remarks/>
        TMSAgentAvailableSystemLicensesWarning,
        
        /// <remarks/>
        TMSAgentNoAvailableSystemLicenses,
        
        /// <remarks/>
        TMSAgentNoAvailableMoviLicenses,
        
        /// <remarks/>
        TMSAgentAvailableMoviLicensesWarning,
        
        /// <remarks/>
        ApproachedLicensedLimit,
        
        /// <remarks/>
        ProvisioningModeIsWrong,
        
        /// <remarks/>
        MCUPrefixConfigurationInvalid,
        
        /// <remarks/>
        CustomTicketCritical,
        
        /// <remarks/>
        CustomTicketMajor,
        
        /// <remarks/>
        CustomTicketMinor,
        
        /// <remarks/>
        CustomTicketWarning,
        
        /// <remarks/>
        PersistentSettingMismatch,
        
        /// <remarks/>
        H323Error_MissingNumber,
        
        /// <remarks/>
        H323Error_HasNumberButNoBandwidth,
        
        /// <remarks/>
        NetworkError_DHCPAndTrackedByIPAddress,
        
        /// <remarks/>
        LocalTMSAgentDiagnosticsCriticalFailure,
        
        /// <remarks/>
        LocalTMSAgentDiagnosticsWarningFailure,
        
        /// <remarks/>
        VcsTMSAgentDiagnosticsCriticalFailure,
        
        /// <remarks/>
        VcsTMSAgentDiagnosticsWarningFailure,
        
        /// <remarks/>
        HostNameMismatch,
        
        /// <remarks/>
        ServerTimeMismatch,
        
        /// <remarks/>
        ConferenceFactoryManagedMCUNotInTMS,
        
        /// <remarks/>
        NotRegisteredWithCucm,
        
        /// <remarks/>
        SupervisorSystemNotAvailable,
        
        /// <remarks/>
        SshPasswordExpiryEnabled,
        
        /// <remarks/>
        CucmTimeOffByMoreThanThreshold,
        
        /// <remarks/>
        NativeInteropEnabledButSIPDomainNameNotSet,
        
        /// <remarks/>
        TMSAgentNoAvailableProvisioningLicenses,
        
        /// <remarks/>
        TMSAgentAvailableProvisioningLicensesWarning,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class SystemDiagnosticsMessage {
        
        private int idField;
        
        private long systemIdField;
        
        private string generalDescriptionField;
        
        private string specificDescriptionField;
        
        private string howToFixDescriptionField;
        
        private SystemDiagnosticsMessageStatus messageStatusField;
        
        private SystemDiagnosticsMessageErrorLevel errorLevelField;
        
        private SystemDiagnosticsMessageType messageTypeField;
        
        private System.DateTime firstReportedField;
        
        private System.DateTime lastReportedField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long SystemId {
            get {
                return this.systemIdField;
            }
            set {
                this.systemIdField = value;
            }
        }
        
        /// <remarks/>
        public string GeneralDescription {
            get {
                return this.generalDescriptionField;
            }
            set {
                this.generalDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string SpecificDescription {
            get {
                return this.specificDescriptionField;
            }
            set {
                this.specificDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string HowToFixDescription {
            get {
                return this.howToFixDescriptionField;
            }
            set {
                this.howToFixDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessageStatus MessageStatus {
            get {
                return this.messageStatusField;
            }
            set {
                this.messageStatusField = value;
            }
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessageErrorLevel ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessageType MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FirstReported {
            get {
                return this.firstReportedField;
            }
            set {
                this.firstReportedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastReported {
            get {
                return this.lastReportedField;
            }
            set {
                this.lastReportedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class Folder {
        
        private long idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private long parentIdField;
        
        private Folder[] childrenField;
        
        private ManagedSystem[] systemsInFolderField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public long ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public Folder[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
        
        /// <remarks/>
        public ManagedSystem[] SystemsInFolder {
            get {
                return this.systemsInFolderField;
            }
            set {
                this.systemsInFolderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class ManagedSystem {
        
        private long idField;
        
        private string macAddressField;
        
        private string iPAddressField;
        
        private string nameField;
        
        private SystemType systemTypeField;
        
        private SystemCategory systemCategoryField;
        
        private string systemTypeDescriptionField;
        
        private Location locationField;
        
        private Authentication authenticationField;
        
        private Authentication8021X authentication8021XField;
        
        private Status statusField;
        
        private SystemCapabilites systemCapabilitesField;
        
        private string requestedGatekeeperAddressField;
        
        private string activeGatekeeperAddressField;
        
        private string requestedSIPServerAddressField;
        
        private string activeSIPServerAddressField;
        
        private string h323IdField;
        
        private string e164AliasField;
        
        private string sIPUriField;
        
        private string iSDNNumberField;
        
        private DialinNumber[] dialinNumbersField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string MacAddress {
            get {
                return this.macAddressField;
            }
            set {
                this.macAddressField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public SystemType SystemType {
            get {
                return this.systemTypeField;
            }
            set {
                this.systemTypeField = value;
            }
        }
        
        /// <remarks/>
        public SystemCategory SystemCategory {
            get {
                return this.systemCategoryField;
            }
            set {
                this.systemCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string SystemTypeDescription {
            get {
                return this.systemTypeDescriptionField;
            }
            set {
                this.systemTypeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public Location Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public Authentication Authentication {
            get {
                return this.authenticationField;
            }
            set {
                this.authenticationField = value;
            }
        }
        
        /// <remarks/>
        public Authentication8021X Authentication8021X {
            get {
                return this.authentication8021XField;
            }
            set {
                this.authentication8021XField = value;
            }
        }
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public SystemCapabilites SystemCapabilites {
            get {
                return this.systemCapabilitesField;
            }
            set {
                this.systemCapabilitesField = value;
            }
        }
        
        /// <remarks/>
        public string RequestedGatekeeperAddress {
            get {
                return this.requestedGatekeeperAddressField;
            }
            set {
                this.requestedGatekeeperAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ActiveGatekeeperAddress {
            get {
                return this.activeGatekeeperAddressField;
            }
            set {
                this.activeGatekeeperAddressField = value;
            }
        }
        
        /// <remarks/>
        public string RequestedSIPServerAddress {
            get {
                return this.requestedSIPServerAddressField;
            }
            set {
                this.requestedSIPServerAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ActiveSIPServerAddress {
            get {
                return this.activeSIPServerAddressField;
            }
            set {
                this.activeSIPServerAddressField = value;
            }
        }
        
        /// <remarks/>
        public string H323Id {
            get {
                return this.h323IdField;
            }
            set {
                this.h323IdField = value;
            }
        }
        
        /// <remarks/>
        public string E164Alias {
            get {
                return this.e164AliasField;
            }
            set {
                this.e164AliasField = value;
            }
        }
        
        /// <remarks/>
        public string SIPUri {
            get {
                return this.sIPUriField;
            }
            set {
                this.sIPUriField = value;
            }
        }
        
        /// <remarks/>
        public string ISDNNumber {
            get {
                return this.iSDNNumberField;
            }
            set {
                this.iSDNNumberField = value;
            }
        }
        
        /// <remarks/>
        public DialinNumber[] DialinNumbers {
            get {
                return this.dialinNumbersField;
            }
            set {
                this.dialinNumbersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum SystemType {
        
        /// <remarks/>
        Preregistered,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Room,
        
        /// <remarks/>
        DigitalCamera,
        
        /// <remarks/>
        Projector,
        
        /// <remarks/>
        DVDPlayer,
        
        /// <remarks/>
        DocumentCamera,
        
        /// <remarks/>
        VCR,
        
        /// <remarks/>
        LapTop,
        
        /// <remarks/>
        VideoCamera,
        
        /// <remarks/>
        TandbergClassic,
        
        /// <remarks/>
        TandbergMXP,
        
        /// <remarks/>
        TandbergCiscoClassic,
        
        /// <remarks/>
        TandbergCiscoMXP,
        
        /// <remarks/>
        TandbergGateway,
        
        /// <remarks/>
        TandbergVCS,
        
        /// <remarks/>
        TandbergGatekeeper,
        
        /// <remarks/>
        TandbergBorderController,
        
        /// <remarks/>
        TandbergMPS,
        
        /// <remarks/>
        TandbergMCU,
        
        /// <remarks/>
        TandbergT3,
        
        /// <remarks/>
        TandbergEntryPoint,
        
        /// <remarks/>
        TandbergVideoPortal,
        
        /// <remarks/>
        TandbergTelepresenceMCU,
        
        /// <remarks/>
        TandbergContentServer,
        
        /// <remarks/>
        TandbergComplianceAppliance,
        
        /// <remarks/>
        TandbergCSeries,
        
        /// <remarks/>
        TandbergE20,
        
        /// <remarks/>
        Tandberg,
        
        /// <remarks/>
        CodianMCU,
        
        /// <remarks/>
        CodianIPGateway,
        
        /// <remarks/>
        CodianISDNGateway,
        
        /// <remarks/>
        CodianIPVCR,
        
        /// <remarks/>
        CodianSupervisor,
        
        /// <remarks/>
        CiscoCTS,
        
        /// <remarks/>
        CiscoCUCM,
        
        /// <remarks/>
        PolycomViewStation,
        
        /// <remarks/>
        PolycomIPower,
        
        /// <remarks/>
        PolycomViaVideo,
        
        /// <remarks/>
        PolycomVSX,
        
        /// <remarks/>
        PolycomHDX,
        
        /// <remarks/>
        PolycomMGC,
        
        /// <remarks/>
        Sony,
        
        /// <remarks/>
        Aethra,
        
        /// <remarks/>
        CiscoGatekeeper,
        
        /// <remarks/>
        CiscoMCU,
        
        /// <remarks/>
        RadvisionGateway,
        
        /// <remarks/>
        RadvisionGatekeeper,
        
        /// <remarks/>
        RadvisionMCU,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum SystemCategory {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        EndPoint,
        
        /// <remarks/>
        MCU,
        
        /// <remarks/>
        Gateway,
        
        /// <remarks/>
        Gatekeeper,
        
        /// <remarks/>
        Room,
        
        /// <remarks/>
        IPTelephone,
        
        /// <remarks/>
        BorderController,
        
        /// <remarks/>
        Equipment,
        
        /// <remarks/>
        Recording,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        VideoServer,
        
        /// <remarks/>
        ThreeGMCU,
        
        /// <remarks/>
        Supervisor,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class Location {
        
        private int iSDNZoneIdField;
        
        private int iPZoneIdField;
        
        private int timeZoneIdField;
        
        /// <remarks/>
        public int ISDNZoneId {
            get {
                return this.iSDNZoneIdField;
            }
            set {
                this.iSDNZoneIdField = value;
            }
        }
        
        /// <remarks/>
        public int IPZoneId {
            get {
                return this.iPZoneIdField;
            }
            set {
                this.iPZoneIdField = value;
            }
        }
        
        /// <remarks/>
        public int TimeZoneId {
            get {
                return this.timeZoneIdField;
            }
            set {
                this.timeZoneIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class Authentication {
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class Authentication8021X {
        
        private bool enabledField;
        
        private string identityField;
        
        private string passwordField;
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string Identity {
            get {
                return this.identityField;
            }
            set {
                this.identityField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class Status {
        
        private SystemStatus systemStatusField;
        
        private ConnectionStatus connectionStatusField;
        
        /// <remarks/>
        public SystemStatus SystemStatus {
            get {
                return this.systemStatusField;
            }
            set {
                this.systemStatusField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStatus ConnectionStatus {
            get {
                return this.connectionStatusField;
            }
            set {
                this.connectionStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum SystemStatus {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Idle,
        
        /// <remarks/>
        InCall,
        
        /// <remarks/>
        Alive,
        
        /// <remarks/>
        NoResponse,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum ConnectionStatus {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        WrongUsernamePassword,
        
        /// <remarks/>
        PasswordMissing,
        
        /// <remarks/>
        WrongAdminPassword,
        
        /// <remarks/>
        AdminPasswordMissing,
        
        /// <remarks/>
        NoSNMPResponse,
        
        /// <remarks/>
        NoHTTPResponse,
        
        /// <remarks/>
        NoPingResponse,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        RemoteAdminNotActivated,
        
        /// <remarks/>
        NoTelnetResponse,
        
        /// <remarks/>
        WrongSNMPSetCommunityName,
        
        /// <remarks/>
        TMSAccordWebServerServiceNotResponding,
        
        /// <remarks/>
        Unactivated,
        
        /// <remarks/>
        SystemIsUpgrading,
        
        /// <remarks/>
        UsernameMissing,
        
        /// <remarks/>
        NetworkAddressMissing,
        
        /// <remarks/>
        Inaccessible,
        
        /// <remarks/>
        NoHTTPSResponse,
        
        /// <remarks/>
        CertificateValidationError,
        
        /// <remarks/>
        NotRegisteredWithCucm,
        
        /// <remarks/>
        SupervisorSystemNotAvailable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class SystemCapabilites {
        
        private bool supportsBackupField;
        
        private bool supportsTemplatesField;
        
        private bool supportsRestartField;
        
        private bool supportsIEEE8021xField;
        
        /// <remarks/>
        public bool SupportsBackup {
            get {
                return this.supportsBackupField;
            }
            set {
                this.supportsBackupField = value;
            }
        }
        
        /// <remarks/>
        public bool SupportsTemplates {
            get {
                return this.supportsTemplatesField;
            }
            set {
                this.supportsTemplatesField = value;
            }
        }
        
        /// <remarks/>
        public bool SupportsRestart {
            get {
                return this.supportsRestartField;
            }
            set {
                this.supportsRestartField = value;
            }
        }
        
        /// <remarks/>
        public bool SupportsIEEE8021x {
            get {
                return this.supportsIEEE8021xField;
            }
            set {
                this.supportsIEEE8021xField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class DialinNumber {
        
        private string idField;
        
        private string h323IdField;
        
        private string e164AliasField;
        
        private string sIPUriField;
        
        private string iSDNNumberField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string H323Id {
            get {
                return this.h323IdField;
            }
            set {
                this.h323IdField = value;
            }
        }
        
        /// <remarks/>
        public string E164Alias {
            get {
                return this.e164AliasField;
            }
            set {
                this.e164AliasField = value;
            }
        }
        
        /// <remarks/>
        public string SIPUri {
            get {
                return this.sIPUriField;
            }
            set {
                this.sIPUriField = value;
            }
        }
        
        /// <remarks/>
        public string ISDNNumber {
            get {
                return this.iSDNNumberField;
            }
            set {
                this.iSDNNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class FolderTree {
        
        private Folder rootField;
        
        /// <remarks/>
        public Folder Root {
            get {
                return this.rootField;
            }
            set {
                this.rootField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class IPZone {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class ISDNZone {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class TimeZone {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class AddSystem {
        
        private string iPAddressField;
        
        private Location locationField;
        
        private Authentication authenticationField;
        
        private SystemUsageType usageTypeField;
        
        private bool discoverNonSNMPSystemsField;
        
        private int persistentTemplateIdField;
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public Location Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public Authentication Authentication {
            get {
                return this.authenticationField;
            }
            set {
                this.authenticationField = value;
            }
        }
        
        /// <remarks/>
        public SystemUsageType UsageType {
            get {
                return this.usageTypeField;
            }
            set {
                this.usageTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool DiscoverNonSNMPSystems {
            get {
                return this.discoverNonSNMPSystemsField;
            }
            set {
                this.discoverNonSNMPSystemsField = value;
            }
        }
        
        /// <remarks/>
        public int PersistentTemplateId {
            get {
                return this.persistentTemplateIdField;
            }
            set {
                this.persistentTemplateIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum SystemUsageType {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        MeetingRoom,
        
        /// <remarks/>
        PersonalOfficeSystem,
        
        /// <remarks/>
        PersonalHomeSystem,
        
        /// <remarks/>
        RollAbout,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class TemplateSettings {
        
        private bool keepNamePersistentField;
        
        private bool keepE164AliasPersistentField;
        
        private bool keepH323IdPersistentField;
        
        private int persistentTemplateIdField;
        
        private int startupTemplateIdField;
        
        /// <remarks/>
        public bool KeepNamePersistent {
            get {
                return this.keepNamePersistentField;
            }
            set {
                this.keepNamePersistentField = value;
            }
        }
        
        /// <remarks/>
        public bool KeepE164AliasPersistent {
            get {
                return this.keepE164AliasPersistentField;
            }
            set {
                this.keepE164AliasPersistentField = value;
            }
        }
        
        /// <remarks/>
        public bool KeepH323IdPersistent {
            get {
                return this.keepH323IdPersistentField;
            }
            set {
                this.keepH323IdPersistentField = value;
            }
        }
        
        /// <remarks/>
        public int PersistentTemplateId {
            get {
                return this.persistentTemplateIdField;
            }
            set {
                this.persistentTemplateIdField = value;
            }
        }
        
        /// <remarks/>
        public int StartupTemplateId {
            get {
                return this.startupTemplateIdField;
            }
            set {
                this.startupTemplateIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public partial class PreRegisteredSystem {
        
        private SystemIdentifierType identifierTypeField;
        
        private string identifierField;
        
        private Location locationField;
        
        private Authentication authenticationField;
        
        private string nameField;
        
        private string h323IdField;
        
        private string e164AliasField;
        
        private TemplateSettings templateSettingsField;
        
        /// <remarks/>
        public SystemIdentifierType IdentifierType {
            get {
                return this.identifierTypeField;
            }
            set {
                this.identifierTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public Location Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public Authentication Authentication {
            get {
                return this.authenticationField;
            }
            set {
                this.authenticationField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string H323Id {
            get {
                return this.h323IdField;
            }
            set {
                this.h323IdField = value;
            }
        }
        
        /// <remarks/>
        public string E164Alias {
            get {
                return this.e164AliasField;
            }
            set {
                this.e164AliasField = value;
            }
        }
        
        /// <remarks/>
        public TemplateSettings TemplateSettings {
            get {
                return this.templateSettingsField;
            }
            set {
                this.templateSettingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tandberg.com/TMS/ManagementService/1.0/")]
    public enum SystemIdentifierType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        IPAddress,
        
        /// <remarks/>
        HostName,
        
        /// <remarks/>
        MACAddress,
        
        /// <remarks/>
        SerialNumber,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTMSInformationCompletedEventHandler(object sender, GetTMSInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTMSInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTMSInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TMSInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TMSInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PreRegisterSystemCompletedEventHandler(object sender, PreRegisterSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreRegisterSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreRegisterSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddSystemCompletedEventHandler(object sender, AddSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetSystemIdCompletedEventHandler(object sender, GetSystemIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetSystemCompletedEventHandler(object sender, GetSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ManagedSystem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagedSystem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAllSystemsCompletedEventHandler(object sender, GetAllSystemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSystemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSystemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ManagedSystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagedSystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateSystemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PurgeSystemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void RefreshSystemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTimeZonesCompletedEventHandler(object sender, GetTimeZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimeZone[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimeZone[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetISDNZonesCompletedEventHandler(object sender, GetISDNZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetISDNZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetISDNZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ISDNZone[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ISDNZone[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetIPZonesCompletedEventHandler(object sender, GetIPZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIPZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIPZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IPZone[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IPZone[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFolderTreeCompletedEventHandler(object sender, GetFolderTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderTree Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderTree)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteSystemFromFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFolderCompletedEventHandler(object sender, GetFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetSystemsInFolderCompletedEventHandler(object sender, GetSystemsInFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemsInFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemsInFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ManagedSystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagedSystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetSystemDiagnosticsMessagesForSystemCompletedEventHandler(object sender, GetSystemDiagnosticsMessagesForSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemDiagnosticsMessagesForSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemDiagnosticsMessagesForSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemDiagnosticsMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAllSystemsDiagnosticsMessagesCompletedEventHandler(object sender, GetAllSystemsDiagnosticsMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSystemsDiagnosticsMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSystemsDiagnosticsMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemDiagnosticsMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetSystemDiagnosticsMessagesForSystemsCompletedEventHandler(object sender, GetSystemDiagnosticsMessagesForSystemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemDiagnosticsMessagesForSystemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemDiagnosticsMessagesForSystemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemDiagnosticsMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetSystemDiagnosticsMessagesForFolderCompletedEventHandler(object sender, GetSystemDiagnosticsMessagesForFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemDiagnosticsMessagesForFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemDiagnosticsMessagesForFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemDiagnosticsMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemDiagnosticsMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTMSDiagnosticsMessagesCompletedEventHandler(object sender, GetTMSDiagnosticsMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTMSDiagnosticsMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTMSDiagnosticsMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TMSDiagnosticsMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TMSDiagnosticsMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTemplatesCompletedEventHandler(object sender, GetTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Template[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Template[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ApplyTemplateToSystemsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void RemovePersistentTemplateFromSystemsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPersistentSystemSettingsCompletedEventHandler(object sender, GetPersistentSystemSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersistentSystemSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersistentSystemSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersistentSystemSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersistentSystemSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdatePersistentSystemSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetBackupStatusCompletedEventHandler(object sender, GetBackupStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBackupStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBackupStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<System.DateTime> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PerformSystemBackupAsBackgroundActivityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PerformSystemRestoreAsBackgroundActivityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PerformSystemBackupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PerformSystemRestoreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPrimarySystemByUsernameCompletedEventHandler(object sender, GetPrimarySystemByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrimarySystemByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrimarySystemByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ManagedSystem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ManagedSystem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void RestartSystemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591