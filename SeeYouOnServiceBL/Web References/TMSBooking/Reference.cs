//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SeeYouOnServiceBL.TMSBooking {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BookingServiceSoap", Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class BookingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ExternalAPIVersionSoapHeader externalAPIVersionSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetConferencesForSystemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConferenceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecurrentConferenceByIdOperationCompleted;
        
        private VersionSoapHeader versionSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetDefaultConferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveConferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveConferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveConferenceRecInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteConferenceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndConferenceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteConferenceRecInstanceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConferenceIdByExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConferencesForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordingAliasesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BookingService() {
            this.Url = global::SeeYouOnServiceBL.Properties.Settings.Default.SeeYouOnServiceBL_TMSBooking_BookingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ExternalAPIVersionSoapHeader ExternalAPIVersionSoapHeaderValue {
            get {
                return this.externalAPIVersionSoapHeaderValueField;
            }
            set {
                this.externalAPIVersionSoapHeaderValueField = value;
            }
        }
        
        public VersionSoapHeader VersionSoapHeaderValue {
            get {
                return this.versionSoapHeaderValueField;
            }
            set {
                this.versionSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetConferencesForSystemsCompletedEventHandler GetConferencesForSystemsCompleted;
        
        /// <remarks/>
        public event GetConferenceByIdCompletedEventHandler GetConferenceByIdCompleted;
        
        /// <remarks/>
        public event GetRecurrentConferenceByIdCompletedEventHandler GetRecurrentConferenceByIdCompleted;
        
        /// <remarks/>
        public event GetDefaultConferenceCompletedEventHandler GetDefaultConferenceCompleted;
        
        /// <remarks/>
        public event SaveConferenceCompletedEventHandler SaveConferenceCompleted;
        
        /// <remarks/>
        public event SaveConferencesCompletedEventHandler SaveConferencesCompleted;
        
        /// <remarks/>
        public event SaveConferenceRecInstanceCompletedEventHandler SaveConferenceRecInstanceCompleted;
        
        /// <remarks/>
        public event DeleteConferenceByIdCompletedEventHandler DeleteConferenceByIdCompleted;
        
        /// <remarks/>
        public event EndConferenceByIdCompletedEventHandler EndConferenceByIdCompleted;
        
        /// <remarks/>
        public event DeleteConferenceRecInstanceByIdCompletedEventHandler DeleteConferenceRecInstanceByIdCompleted;
        
        /// <remarks/>
        public event GetConferenceIdByExternalIdCompletedEventHandler GetConferenceIdByExternalIdCompleted;
        
        /// <remarks/>
        public event GetTransactionsSinceCompletedEventHandler GetTransactionsSinceCompleted;
        
        /// <remarks/>
        public event GetConferencesForUserCompletedEventHandler GetConferencesForUserCompleted;
        
        /// <remarks/>
        public event GetRecordingAliasesCompletedEventHandler GetRecordingAliasesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/GetConferencesForSystems", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conference[] GetConferencesForSystems([System.Xml.Serialization.XmlElementAttribute("SystemIds")] int[] SystemIds, System.DateTime StartTime, System.DateTime EndTime, ConferenceStatus ConferenceStatus) {
            object[] results = this.Invoke("GetConferencesForSystems", new object[] {
                        SystemIds,
                        StartTime,
                        EndTime,
                        ConferenceStatus});
            return ((Conference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConferencesForSystemsAsync(int[] SystemIds, System.DateTime StartTime, System.DateTime EndTime, ConferenceStatus ConferenceStatus) {
            this.GetConferencesForSystemsAsync(SystemIds, StartTime, EndTime, ConferenceStatus, null);
        }
        
        /// <remarks/>
        public void GetConferencesForSystemsAsync(int[] SystemIds, System.DateTime StartTime, System.DateTime EndTime, ConferenceStatus ConferenceStatus, object userState) {
            if ((this.GetConferencesForSystemsOperationCompleted == null)) {
                this.GetConferencesForSystemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConferencesForSystemsOperationCompleted);
            }
            this.InvokeAsync("GetConferencesForSystems", new object[] {
                        SystemIds,
                        StartTime,
                        EndTime,
                        ConferenceStatus}, this.GetConferencesForSystemsOperationCompleted, userState);
        }
        
        private void OnGetConferencesForSystemsOperationCompleted(object arg) {
            if ((this.GetConferencesForSystemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConferencesForSystemsCompleted(this, new GetConferencesForSystemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/GetConferenceById", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conference GetConferenceById(int ConferenceId) {
            object[] results = this.Invoke("GetConferenceById", new object[] {
                        ConferenceId});
            return ((Conference)(results[0]));
        }
        
        /// <remarks/>
        public void GetConferenceByIdAsync(int ConferenceId) {
            this.GetConferenceByIdAsync(ConferenceId, null);
        }
        
        /// <remarks/>
        public void GetConferenceByIdAsync(int ConferenceId, object userState) {
            if ((this.GetConferenceByIdOperationCompleted == null)) {
                this.GetConferenceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConferenceByIdOperationCompleted);
            }
            this.InvokeAsync("GetConferenceById", new object[] {
                        ConferenceId}, this.GetConferenceByIdOperationCompleted, userState);
        }
        
        private void OnGetConferenceByIdOperationCompleted(object arg) {
            if ((this.GetConferenceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConferenceByIdCompleted(this, new GetConferenceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/GetRecurrentConferenceById", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conference GetRecurrentConferenceById(int ConferenceId) {
            object[] results = this.Invoke("GetRecurrentConferenceById", new object[] {
                        ConferenceId});
            return ((Conference)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecurrentConferenceByIdAsync(int ConferenceId) {
            this.GetRecurrentConferenceByIdAsync(ConferenceId, null);
        }
        
        /// <remarks/>
        public void GetRecurrentConferenceByIdAsync(int ConferenceId, object userState) {
            if ((this.GetRecurrentConferenceByIdOperationCompleted == null)) {
                this.GetRecurrentConferenceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecurrentConferenceByIdOperationCompleted);
            }
            this.InvokeAsync("GetRecurrentConferenceById", new object[] {
                        ConferenceId}, this.GetRecurrentConferenceByIdOperationCompleted, userState);
        }
        
        private void OnGetRecurrentConferenceByIdOperationCompleted(object arg) {
            if ((this.GetRecurrentConferenceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecurrentConferenceByIdCompleted(this, new GetRecurrentConferenceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("VersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/GetDefaultConference", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conference GetDefaultConference() {
            object[] results = this.Invoke("GetDefaultConference", new object[0]);
            return ((Conference)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultConferenceAsync() {
            this.GetDefaultConferenceAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultConferenceAsync(object userState) {
            if ((this.GetDefaultConferenceOperationCompleted == null)) {
                this.GetDefaultConferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultConferenceOperationCompleted);
            }
            this.InvokeAsync("GetDefaultConference", new object[0], this.GetDefaultConferenceOperationCompleted, userState);
        }
        
        private void OnGetDefaultConferenceOperationCompleted(object arg) {
            if ((this.GetDefaultConferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultConferenceCompleted(this, new GetDefaultConferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/SaveConference", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conference SaveConference(Conference Conference) {
            object[] results = this.Invoke("SaveConference", new object[] {
                        Conference});
            return ((Conference)(results[0]));
        }
        
        /// <remarks/>
        public void SaveConferenceAsync(Conference Conference) {
            this.SaveConferenceAsync(Conference, null);
        }
        
        /// <remarks/>
        public void SaveConferenceAsync(Conference Conference, object userState) {
            if ((this.SaveConferenceOperationCompleted == null)) {
                this.SaveConferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveConferenceOperationCompleted);
            }
            this.InvokeAsync("SaveConference", new object[] {
                        Conference}, this.SaveConferenceOperationCompleted, userState);
        }
        
        private void OnSaveConferenceOperationCompleted(object arg) {
            if ((this.SaveConferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveConferenceCompleted(this, new SaveConferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/SaveConferences", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conference[] SaveConferences([System.Xml.Serialization.XmlElementAttribute("Conferences")] Conference[] Conferences, bool oneTransaction) {
            object[] results = this.Invoke("SaveConferences", new object[] {
                        Conferences,
                        oneTransaction});
            return ((Conference[])(results[0]));
        }
        
        /// <remarks/>
        public void SaveConferencesAsync(Conference[] Conferences, bool oneTransaction) {
            this.SaveConferencesAsync(Conferences, oneTransaction, null);
        }
        
        /// <remarks/>
        public void SaveConferencesAsync(Conference[] Conferences, bool oneTransaction, object userState) {
            if ((this.SaveConferencesOperationCompleted == null)) {
                this.SaveConferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveConferencesOperationCompleted);
            }
            this.InvokeAsync("SaveConferences", new object[] {
                        Conferences,
                        oneTransaction}, this.SaveConferencesOperationCompleted, userState);
        }
        
        private void OnSaveConferencesOperationCompleted(object arg) {
            if ((this.SaveConferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveConferencesCompleted(this, new SaveConferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/SaveConferenceRecInstance", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conference SaveConferenceRecInstance(Conference Conference) {
            object[] results = this.Invoke("SaveConferenceRecInstance", new object[] {
                        Conference});
            return ((Conference)(results[0]));
        }
        
        /// <remarks/>
        public void SaveConferenceRecInstanceAsync(Conference Conference) {
            this.SaveConferenceRecInstanceAsync(Conference, null);
        }
        
        /// <remarks/>
        public void SaveConferenceRecInstanceAsync(Conference Conference, object userState) {
            if ((this.SaveConferenceRecInstanceOperationCompleted == null)) {
                this.SaveConferenceRecInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveConferenceRecInstanceOperationCompleted);
            }
            this.InvokeAsync("SaveConferenceRecInstance", new object[] {
                        Conference}, this.SaveConferenceRecInstanceOperationCompleted, userState);
        }
        
        private void OnSaveConferenceRecInstanceOperationCompleted(object arg) {
            if ((this.SaveConferenceRecInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveConferenceRecInstanceCompleted(this, new SaveConferenceRecInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/DeleteConferenceById", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteConferenceById(int ConferenceId) {
            this.Invoke("DeleteConferenceById", new object[] {
                        ConferenceId});
        }
        
        /// <remarks/>
        public void DeleteConferenceByIdAsync(int ConferenceId) {
            this.DeleteConferenceByIdAsync(ConferenceId, null);
        }
        
        /// <remarks/>
        public void DeleteConferenceByIdAsync(int ConferenceId, object userState) {
            if ((this.DeleteConferenceByIdOperationCompleted == null)) {
                this.DeleteConferenceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteConferenceByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteConferenceById", new object[] {
                        ConferenceId}, this.DeleteConferenceByIdOperationCompleted, userState);
        }
        
        private void OnDeleteConferenceByIdOperationCompleted(object arg) {
            if ((this.DeleteConferenceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteConferenceByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/EndConferenceById", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndConferenceById(int ConferenceId) {
            this.Invoke("EndConferenceById", new object[] {
                        ConferenceId});
        }
        
        /// <remarks/>
        public void EndConferenceByIdAsync(int ConferenceId) {
            this.EndConferenceByIdAsync(ConferenceId, null);
        }
        
        /// <remarks/>
        public void EndConferenceByIdAsync(int ConferenceId, object userState) {
            if ((this.EndConferenceByIdOperationCompleted == null)) {
                this.EndConferenceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndConferenceByIdOperationCompleted);
            }
            this.InvokeAsync("EndConferenceById", new object[] {
                        ConferenceId}, this.EndConferenceByIdOperationCompleted, userState);
        }
        
        private void OnEndConferenceByIdOperationCompleted(object arg) {
            if ((this.EndConferenceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndConferenceByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/DeleteConferenceRecInstanceById", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteConferenceRecInstanceById(int ConferenceId) {
            this.Invoke("DeleteConferenceRecInstanceById", new object[] {
                        ConferenceId});
        }
        
        /// <remarks/>
        public void DeleteConferenceRecInstanceByIdAsync(int ConferenceId) {
            this.DeleteConferenceRecInstanceByIdAsync(ConferenceId, null);
        }
        
        /// <remarks/>
        public void DeleteConferenceRecInstanceByIdAsync(int ConferenceId, object userState) {
            if ((this.DeleteConferenceRecInstanceByIdOperationCompleted == null)) {
                this.DeleteConferenceRecInstanceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteConferenceRecInstanceByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteConferenceRecInstanceById", new object[] {
                        ConferenceId}, this.DeleteConferenceRecInstanceByIdOperationCompleted, userState);
        }
        
        private void OnDeleteConferenceRecInstanceByIdOperationCompleted(object arg) {
            if ((this.DeleteConferenceRecInstanceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteConferenceRecInstanceByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/GetConferenceIdByExternalId", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetConferenceIdByExternalId(string ExternalSourceId, string ExternalConferenceId, string RecurrenceIdUTC) {
            object[] results = this.Invoke("GetConferenceIdByExternalId", new object[] {
                        ExternalSourceId,
                        ExternalConferenceId,
                        RecurrenceIdUTC});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetConferenceIdByExternalIdAsync(string ExternalSourceId, string ExternalConferenceId, string RecurrenceIdUTC) {
            this.GetConferenceIdByExternalIdAsync(ExternalSourceId, ExternalConferenceId, RecurrenceIdUTC, null);
        }
        
        /// <remarks/>
        public void GetConferenceIdByExternalIdAsync(string ExternalSourceId, string ExternalConferenceId, string RecurrenceIdUTC, object userState) {
            if ((this.GetConferenceIdByExternalIdOperationCompleted == null)) {
                this.GetConferenceIdByExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConferenceIdByExternalIdOperationCompleted);
            }
            this.InvokeAsync("GetConferenceIdByExternalId", new object[] {
                        ExternalSourceId,
                        ExternalConferenceId,
                        RecurrenceIdUTC}, this.GetConferenceIdByExternalIdOperationCompleted, userState);
        }
        
        private void OnGetConferenceIdByExternalIdOperationCompleted(object arg) {
            if ((this.GetConferenceIdByExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConferenceIdByExternalIdCompleted(this, new GetConferenceIdByExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/GetTransactionsSince", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Transaction[] GetTransactionsSince(int CurrentTransactionId) {
            object[] results = this.Invoke("GetTransactionsSince", new object[] {
                        CurrentTransactionId});
            return ((Transaction[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsSinceAsync(int CurrentTransactionId) {
            this.GetTransactionsSinceAsync(CurrentTransactionId, null);
        }
        
        /// <remarks/>
        public void GetTransactionsSinceAsync(int CurrentTransactionId, object userState) {
            if ((this.GetTransactionsSinceOperationCompleted == null)) {
                this.GetTransactionsSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsSinceOperationCompleted);
            }
            this.InvokeAsync("GetTransactionsSince", new object[] {
                        CurrentTransactionId}, this.GetTransactionsSinceOperationCompleted, userState);
        }
        
        private void OnGetTransactionsSinceOperationCompleted(object arg) {
            if ((this.GetTransactionsSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsSinceCompleted(this, new GetTransactionsSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/GetConferencesForUser", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Conference[] GetConferencesForUser(string UserName, System.DateTime StartTime, System.DateTime EndTime, ConferenceStatus ConferenceStatus) {
            object[] results = this.Invoke("GetConferencesForUser", new object[] {
                        UserName,
                        StartTime,
                        EndTime,
                        ConferenceStatus});
            return ((Conference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConferencesForUserAsync(string UserName, System.DateTime StartTime, System.DateTime EndTime, ConferenceStatus ConferenceStatus) {
            this.GetConferencesForUserAsync(UserName, StartTime, EndTime, ConferenceStatus, null);
        }
        
        /// <remarks/>
        public void GetConferencesForUserAsync(string UserName, System.DateTime StartTime, System.DateTime EndTime, ConferenceStatus ConferenceStatus, object userState) {
            if ((this.GetConferencesForUserOperationCompleted == null)) {
                this.GetConferencesForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConferencesForUserOperationCompleted);
            }
            this.InvokeAsync("GetConferencesForUser", new object[] {
                        UserName,
                        StartTime,
                        EndTime,
                        ConferenceStatus}, this.GetConferencesForUserOperationCompleted, userState);
        }
        
        private void OnGetConferencesForUserOperationCompleted(object arg) {
            if ((this.GetConferencesForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConferencesForUserCompleted(this, new GetConferencesForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ExternalAPIVersionSoapHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tandberg.net/2004/02/tms/external/booking/GetRecordingAliases", RequestNamespace="http://tandberg.net/2004/02/tms/external/booking/", ResponseNamespace="http://tandberg.net/2004/02/tms/external/booking/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RecordingDevice[] GetRecordingAliases(string UserName) {
            object[] results = this.Invoke("GetRecordingAliases", new object[] {
                        UserName});
            return ((RecordingDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordingAliasesAsync(string UserName) {
            this.GetRecordingAliasesAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetRecordingAliasesAsync(string UserName, object userState) {
            if ((this.GetRecordingAliasesOperationCompleted == null)) {
                this.GetRecordingAliasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordingAliasesOperationCompleted);
            }
            this.InvokeAsync("GetRecordingAliases", new object[] {
                        UserName}, this.GetRecordingAliasesOperationCompleted, userState);
        }
        
        private void OnGetRecordingAliasesOperationCompleted(object arg) {
            if ((this.GetRecordingAliasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordingAliasesCompleted(this, new GetRecordingAliasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/", IsNullable=false)]
    public partial class ExternalAPIVersionSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private int clientVersionInField;
        
        private string clientIdentifierInField;
        
        private string clientLatestNamespaceInField;
        
        private string newServiceURLField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int ClientVersionIn {
            get {
                return this.clientVersionInField;
            }
            set {
                this.clientVersionInField = value;
            }
        }
        
        /// <remarks/>
        public string ClientIdentifierIn {
            get {
                return this.clientIdentifierInField;
            }
            set {
                this.clientIdentifierInField = value;
            }
        }
        
        /// <remarks/>
        public string ClientLatestNamespaceIn {
            get {
                return this.clientLatestNamespaceInField;
            }
            set {
                this.clientLatestNamespaceInField = value;
            }
        }
        
        /// <remarks/>
        public string NewServiceURL {
            get {
                return this.newServiceURLField;
            }
            set {
                this.newServiceURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class AliasInfo {
        
        private int systemIdField;
        
        private string aliasIdField;
        
        /// <remarks/>
        public int SystemId {
            get {
                return this.systemIdField;
            }
            set {
                this.systemIdField = value;
            }
        }
        
        /// <remarks/>
        public string AliasId {
            get {
                return this.aliasIdField;
            }
            set {
                this.aliasIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class RecordingDevice {
        
        private string nameField;
        
        private AliasInfo[] aliasesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public AliasInfo[] Aliases {
            get {
                return this.aliasesField;
            }
            set {
                this.aliasesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class Transaction {
        
        private int transactionIdField;
        
        private int conferenceIdField;
        
        private TransactionType transTypeField;
        
        private int performedByUserIdField;
        
        private string participantIdsField;
        
        /// <remarks/>
        public int TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
        /// <remarks/>
        public int ConferenceId {
            get {
                return this.conferenceIdField;
            }
            set {
                this.conferenceIdField = value;
            }
        }
        
        /// <remarks/>
        public TransactionType TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
            }
        }
        
        /// <remarks/>
        public int PerformedByUserId {
            get {
                return this.performedByUserIdField;
            }
            set {
                this.performedByUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string ParticipantIds {
            get {
                return this.participantIdsField;
            }
            set {
                this.participantIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum TransactionType {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Updated,
        
        /// <remarks/>
        Deleted,
        
        /// <remarks/>
        ListIncomplete,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class BandwidthOverride {
        
        private Bandwidth bandwidthField;
        
        /// <remarks/>
        public Bandwidth Bandwidth {
            get {
                return this.bandwidthField;
            }
            set {
                this.bandwidthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum Bandwidth {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1b/64kbps")]
        Item1b64kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2b/128kbps")]
        Item2b128kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3b/192kbps")]
        Item3b192kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4b/256kbps")]
        Item4b256kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5b/320kbps")]
        Item5b320kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6b/384kbps")]
        Item6b384kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8b/512kbps")]
        Item8b512kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12b/768kbps")]
        Item12b768kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18b/1152kbps")]
        Item18b1152kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23b/1472kbps")]
        Item23b1472kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("30b/1920kbps")]
        Item30b1920kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("32b/2048kbps")]
        Item32b2048kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("48b/3072kbps")]
        Item48b3072kbps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("64b/4096kbps")]
        Item64b4096kbps,
        
        /// <remarks/>
        Max,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class Participant {
        
        private int participantIdField;
        
        private string nameOrNumberField;
        
        private ParticipantType participantCallTypeField;
        
        /// <remarks/>
        public int ParticipantId {
            get {
                return this.participantIdField;
            }
            set {
                this.participantIdField = value;
            }
        }
        
        /// <remarks/>
        public string NameOrNumber {
            get {
                return this.nameOrNumberField;
            }
            set {
                this.nameOrNumberField = value;
            }
        }
        
        /// <remarks/>
        public ParticipantType ParticipantCallType {
            get {
                return this.participantCallTypeField;
            }
            set {
                this.participantCallTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum ParticipantType {
        
        /// <remarks/>
        TMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IP Video <-")]
        IPVideo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IP Tel <-")]
        IPTel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISDN Video <-")]
        ISDNVideo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Telephone <-")]
        Telephone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IP Video ->")]
        IPVideo1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IP Tel ->")]
        IPTel1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISDN Video ->")]
        ISDNVideo1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Telephone ->")]
        Telephone1,
        
        /// <remarks/>
        Directory,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SIP <-")]
        SIP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SIP ->")]
        SIP1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3G <-")]
        Item3G,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3G ->")]
        Item3G1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TMS Master Participant")]
        TMSMasterParticipant,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class RecurrenceException {
        
        private ExceptionType exceptionTypeField;
        
        private string recurrenceIdUTCField;
        
        private ExceptionIdRange recurrenceIdRangeField;
        
        private int modifiedMaskField;
        
        private Conference modifiedDataField;
        
        /// <remarks/>
        public ExceptionType ExceptionType {
            get {
                return this.exceptionTypeField;
            }
            set {
                this.exceptionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RecurrenceIdUTC {
            get {
                return this.recurrenceIdUTCField;
            }
            set {
                this.recurrenceIdUTCField = value;
            }
        }
        
        /// <remarks/>
        public ExceptionIdRange RecurrenceIdRange {
            get {
                return this.recurrenceIdRangeField;
            }
            set {
                this.recurrenceIdRangeField = value;
            }
        }
        
        /// <remarks/>
        public int ModifiedMask {
            get {
                return this.modifiedMaskField;
            }
            set {
                this.modifiedMaskField = value;
            }
        }
        
        /// <remarks/>
        public Conference ModifiedData {
            get {
                return this.modifiedDataField;
            }
            set {
                this.modifiedDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum ExceptionType {
        
        /// <remarks/>
        ADD,
        
        /// <remarks/>
        MODIFY,
        
        /// <remarks/>
        DELETE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum ExceptionIdRange {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        ThisAndFuture,
        
        /// <remarks/>
        ThisAndPrior,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class Conference {
        
        private int conferenceIdField;
        
        private string titleField;
        
        private string startTimeUTCField;
        
        private string endTimeUTCField;
        
        private string recurrenceInstanceIdUTCField;
        
        private string recurrenceInstanceTypeField;
        
        private string firstOccurrenceRecInstanceIdUTCField;
        
        private RecurrencePattern recurrencePatternField;
        
        private long ownerIdField;
        
        private string ownerUserNameField;
        
        private string ownerFirstNameField;
        
        private string ownerLastNameField;
        
        private string ownerEmailAddressField;
        
        private ConferenceType conferenceTypeField;
        
        private Bandwidth bandwidthField;
        
        private PictureMode pictureModeField;
        
        private EncryptionRequested encryptedField;
        
        private DataConferenceMode dataConferenceField;
        
        private ExtendOptionRequested showExtendOptionField;
        
        private string passwordField;
        
        private string billingCodeField;
        
        private bool iSDNRestrictField;
        
        private string conferenceInfoTextField;
        
        private string conferenceInfoHtmlField;
        
        private string userMessageTextField;
        
        private string externalSourceIdField;
        
        private string externalPrimaryKeyField;
        
        private Participant[] participantsField;
        
        private string recordedConferenceUriField;
        
        private string webConferencePresenterUriField;
        
        private string webConferenceAttendeeUriField;
        
        private BandwidthOverride iSDNBandwidthField;
        
        private BandwidthOverride iPBandwidthField;
        
        /// <remarks/>
        public int ConferenceId {
            get {
                return this.conferenceIdField;
            }
            set {
                this.conferenceIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string StartTimeUTC {
            get {
                return this.startTimeUTCField;
            }
            set {
                this.startTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public string EndTimeUTC {
            get {
                return this.endTimeUTCField;
            }
            set {
                this.endTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public string RecurrenceInstanceIdUTC {
            get {
                return this.recurrenceInstanceIdUTCField;
            }
            set {
                this.recurrenceInstanceIdUTCField = value;
            }
        }
        
        /// <remarks/>
        public string RecurrenceInstanceType {
            get {
                return this.recurrenceInstanceTypeField;
            }
            set {
                this.recurrenceInstanceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FirstOccurrenceRecInstanceIdUTC {
            get {
                return this.firstOccurrenceRecInstanceIdUTCField;
            }
            set {
                this.firstOccurrenceRecInstanceIdUTCField = value;
            }
        }
        
        /// <remarks/>
        public RecurrencePattern RecurrencePattern {
            get {
                return this.recurrencePatternField;
            }
            set {
                this.recurrencePatternField = value;
            }
        }
        
        /// <remarks/>
        public long OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerUserName {
            get {
                return this.ownerUserNameField;
            }
            set {
                this.ownerUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerFirstName {
            get {
                return this.ownerFirstNameField;
            }
            set {
                this.ownerFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerLastName {
            get {
                return this.ownerLastNameField;
            }
            set {
                this.ownerLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerEmailAddress {
            get {
                return this.ownerEmailAddressField;
            }
            set {
                this.ownerEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public ConferenceType ConferenceType {
            get {
                return this.conferenceTypeField;
            }
            set {
                this.conferenceTypeField = value;
            }
        }
        
        /// <remarks/>
        public Bandwidth Bandwidth {
            get {
                return this.bandwidthField;
            }
            set {
                this.bandwidthField = value;
            }
        }
        
        /// <remarks/>
        public PictureMode PictureMode {
            get {
                return this.pictureModeField;
            }
            set {
                this.pictureModeField = value;
            }
        }
        
        /// <remarks/>
        public EncryptionRequested Encrypted {
            get {
                return this.encryptedField;
            }
            set {
                this.encryptedField = value;
            }
        }
        
        /// <remarks/>
        public DataConferenceMode DataConference {
            get {
                return this.dataConferenceField;
            }
            set {
                this.dataConferenceField = value;
            }
        }
        
        /// <remarks/>
        public ExtendOptionRequested ShowExtendOption {
            get {
                return this.showExtendOptionField;
            }
            set {
                this.showExtendOptionField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string BillingCode {
            get {
                return this.billingCodeField;
            }
            set {
                this.billingCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool ISDNRestrict {
            get {
                return this.iSDNRestrictField;
            }
            set {
                this.iSDNRestrictField = value;
            }
        }
        
        /// <remarks/>
        public string ConferenceInfoText {
            get {
                return this.conferenceInfoTextField;
            }
            set {
                this.conferenceInfoTextField = value;
            }
        }
        
        /// <remarks/>
        public string ConferenceInfoHtml {
            get {
                return this.conferenceInfoHtmlField;
            }
            set {
                this.conferenceInfoHtmlField = value;
            }
        }
        
        /// <remarks/>
        public string UserMessageText {
            get {
                return this.userMessageTextField;
            }
            set {
                this.userMessageTextField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalSourceId {
            get {
                return this.externalSourceIdField;
            }
            set {
                this.externalSourceIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrimaryKey {
            get {
                return this.externalPrimaryKeyField;
            }
            set {
                this.externalPrimaryKeyField = value;
            }
        }
        
        /// <remarks/>
        public Participant[] Participants {
            get {
                return this.participantsField;
            }
            set {
                this.participantsField = value;
            }
        }
        
        /// <remarks/>
        public string RecordedConferenceUri {
            get {
                return this.recordedConferenceUriField;
            }
            set {
                this.recordedConferenceUriField = value;
            }
        }
        
        /// <remarks/>
        public string WebConferencePresenterUri {
            get {
                return this.webConferencePresenterUriField;
            }
            set {
                this.webConferencePresenterUriField = value;
            }
        }
        
        /// <remarks/>
        public string WebConferenceAttendeeUri {
            get {
                return this.webConferenceAttendeeUriField;
            }
            set {
                this.webConferenceAttendeeUriField = value;
            }
        }
        
        /// <remarks/>
        public BandwidthOverride ISDNBandwidth {
            get {
                return this.iSDNBandwidthField;
            }
            set {
                this.iSDNBandwidthField = value;
            }
        }
        
        /// <remarks/>
        public BandwidthOverride IPBandwidth {
            get {
                return this.iPBandwidthField;
            }
            set {
                this.iPBandwidthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public partial class RecurrencePattern {
        
        private RecurringFrequency frequencyTypeField;
        
        private int intervalField;
        
        private DayOfWeek[] daysOfWeekField;
        
        private DayOfWeek firstDayOfWeekField;
        
        private int bySetPositionField;
        
        private RecurrenceEndType patternEndTypeField;
        
        private string patternEndDateUTCField;
        
        private string firstOccurrenceRecInstanceIdUTCField;
        
        private int patternInstancesField;
        
        private RecurrenceException[] exceptionsField;
        
        /// <remarks/>
        public RecurringFrequency FrequencyType {
            get {
                return this.frequencyTypeField;
            }
            set {
                this.frequencyTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        public DayOfWeek[] DaysOfWeek {
            get {
                return this.daysOfWeekField;
            }
            set {
                this.daysOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public DayOfWeek FirstDayOfWeek {
            get {
                return this.firstDayOfWeekField;
            }
            set {
                this.firstDayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public int BySetPosition {
            get {
                return this.bySetPositionField;
            }
            set {
                this.bySetPositionField = value;
            }
        }
        
        /// <remarks/>
        public RecurrenceEndType PatternEndType {
            get {
                return this.patternEndTypeField;
            }
            set {
                this.patternEndTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PatternEndDateUTC {
            get {
                return this.patternEndDateUTCField;
            }
            set {
                this.patternEndDateUTCField = value;
            }
        }
        
        /// <remarks/>
        public string FirstOccurrenceRecInstanceIdUTC {
            get {
                return this.firstOccurrenceRecInstanceIdUTCField;
            }
            set {
                this.firstOccurrenceRecInstanceIdUTCField = value;
            }
        }
        
        /// <remarks/>
        public int PatternInstances {
            get {
                return this.patternInstancesField;
            }
            set {
                this.patternInstancesField = value;
            }
        }
        
        /// <remarks/>
        public RecurrenceException[] Exceptions {
            get {
                return this.exceptionsField;
            }
            set {
                this.exceptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum RecurringFrequency {
        
        /// <remarks/>
        Daily,
        
        /// <remarks/>
        DailyWeekday,
        
        /// <remarks/>
        Weekly,
        
        /// <remarks/>
        Monthly,
        
        /// <remarks/>
        Yearly,
        
        /// <remarks/>
        Secondly,
        
        /// <remarks/>
        Minutely,
        
        /// <remarks/>
        Hourly,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum DayOfWeek {
        
        /// <remarks/>
        Sunday,
        
        /// <remarks/>
        Monday,
        
        /// <remarks/>
        Tuesday,
        
        /// <remarks/>
        Wednesday,
        
        /// <remarks/>
        Thursday,
        
        /// <remarks/>
        Friday,
        
        /// <remarks/>
        Saturday,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum RecurrenceEndType {
        
        /// <remarks/>
        EndByDate,
        
        /// <remarks/>
        EndByInstances,
        
        /// <remarks/>
        EndNever,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum ConferenceType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Reservation Only")]
        ReservationOnly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Automatic Call Launch")]
        AutomaticCallLaunch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Manual Call Launch")]
        ManualCallLaunch,
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ad-Hoc conference")]
        AdHocconference,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("One Button To Push")]
        OneButtonToPush,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum PictureMode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Continuous Presence")]
        ContinuousPresence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Enhanced CP")]
        EnhancedCP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Voice Switched")]
        VoiceSwitched,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum EncryptionRequested {
        
        /// <remarks/>
        Yes,
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("If Possible")]
        IfPossible,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum DataConferenceMode {
        
        /// <remarks/>
        Yes,
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("If Possible")]
        IfPossible,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum ExtendOptionRequested {
        
        /// <remarks/>
        Yes,
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        AutomaticBestEffort,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/", IsNullable=false)]
    public partial class VersionSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private int confAPIVersionField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int ConfAPIVersion {
            get {
                return this.confAPIVersionField;
            }
            set {
                this.confAPIVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tandberg.net/2004/02/tms/external/booking/")]
    public enum ConferenceStatus {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        AllExceptDeleted,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Ongoing,
        
        /// <remarks/>
        Finished,
        
        /// <remarks/>
        PendingAndOngoing,
        
        /// <remarks/>
        MeetingRequest,
        
        /// <remarks/>
        Rejected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Finished")]
        Finished1,
        
        /// <remarks/>
        Deleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetConferencesForSystemsCompletedEventHandler(object sender, GetConferencesForSystemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConferencesForSystemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConferencesForSystemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetConferenceByIdCompletedEventHandler(object sender, GetConferenceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConferenceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConferenceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetRecurrentConferenceByIdCompletedEventHandler(object sender, GetRecurrentConferenceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecurrentConferenceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecurrentConferenceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDefaultConferenceCompletedEventHandler(object sender, GetDefaultConferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultConferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultConferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveConferenceCompletedEventHandler(object sender, SaveConferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveConferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveConferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveConferencesCompletedEventHandler(object sender, SaveConferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveConferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveConferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveConferenceRecInstanceCompletedEventHandler(object sender, SaveConferenceRecInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveConferenceRecInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveConferenceRecInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteConferenceByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void EndConferenceByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteConferenceRecInstanceByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetConferenceIdByExternalIdCompletedEventHandler(object sender, GetConferenceIdByExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConferenceIdByExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConferenceIdByExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTransactionsSinceCompletedEventHandler(object sender, GetTransactionsSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Transaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Transaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetConferencesForUserCompletedEventHandler(object sender, GetConferencesForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConferencesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConferencesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Conference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Conference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetRecordingAliasesCompletedEventHandler(object sender, GetRecordingAliasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordingAliasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordingAliasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecordingDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecordingDevice[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591